// Code generated by protoc-gen-go. DO NOT EDIT.
// source: build.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BuildStep struct {
	// argv to pass to execve(2)
	Argv                 []string `protobuf:"bytes,1,rep,name=argv" json:"argv,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildStep) Reset()         { *m = BuildStep{} }
func (m *BuildStep) String() string { return proto.CompactTextString(m) }
func (*BuildStep) ProtoMessage()    {}
func (*BuildStep) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{0}
}

func (m *BuildStep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildStep.Unmarshal(m, b)
}
func (m *BuildStep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildStep.Marshal(b, m, deterministic)
}
func (m *BuildStep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildStep.Merge(m, src)
}
func (m *BuildStep) XXX_Size() int {
	return xxx_messageInfo_BuildStep.Size(m)
}
func (m *BuildStep) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildStep.DiscardUnknown(m)
}

var xxx_messageInfo_BuildStep proto.InternalMessageInfo

func (m *BuildStep) GetArgv() []string {
	if m != nil {
		return m.Argv
	}
	return nil
}

type CBuilder struct {
	// Additional flag to pass to `configure`.
	ExtraConfigureFlag []string `protobuf:"bytes,1,rep,name=extra_configure_flag,json=extraConfigureFlag" json:"extra_configure_flag,omitempty"`
	// Additional flag to pass to `make`.
	ExtraMakeFlag []string `protobuf:"bytes,4,rep,name=extra_make_flag,json=extraMakeFlag" json:"extra_make_flag,omitempty"`
	// Whether to run autoreconf(1)
	Autoreconf *bool `protobuf:"varint,5,opt,name=autoreconf" json:"autoreconf,omitempty"`
	// Additional flag to append to the `LDFLAGS` environment variable when
	// building.
	ExtraLdflag          []string `protobuf:"bytes,3,rep,name=extra_ldflag,json=extraLdflag" json:"extra_ldflag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CBuilder) Reset()         { *m = CBuilder{} }
func (m *CBuilder) String() string { return proto.CompactTextString(m) }
func (*CBuilder) ProtoMessage()    {}
func (*CBuilder) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{1}
}

func (m *CBuilder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CBuilder.Unmarshal(m, b)
}
func (m *CBuilder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CBuilder.Marshal(b, m, deterministic)
}
func (m *CBuilder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CBuilder.Merge(m, src)
}
func (m *CBuilder) XXX_Size() int {
	return xxx_messageInfo_CBuilder.Size(m)
}
func (m *CBuilder) XXX_DiscardUnknown() {
	xxx_messageInfo_CBuilder.DiscardUnknown(m)
}

var xxx_messageInfo_CBuilder proto.InternalMessageInfo

func (m *CBuilder) GetExtraConfigureFlag() []string {
	if m != nil {
		return m.ExtraConfigureFlag
	}
	return nil
}

func (m *CBuilder) GetExtraMakeFlag() []string {
	if m != nil {
		return m.ExtraMakeFlag
	}
	return nil
}

func (m *CBuilder) GetAutoreconf() bool {
	if m != nil && m.Autoreconf != nil {
		return *m.Autoreconf
	}
	return false
}

func (m *CBuilder) GetExtraLdflag() []string {
	if m != nil {
		return m.ExtraLdflag
	}
	return nil
}

type CMakeBuilder struct {
	// Additional flag to pass to cmake(1), e.g.:
	// extra_cmake_flag: "-DKICAD_SCRIPTING_WXPYTHON_PHOENIX:BOOL=true"
	ExtraCmakeFlag       []string `protobuf:"bytes,1,rep,name=extra_cmake_flag,json=extraCmakeFlag" json:"extra_cmake_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMakeBuilder) Reset()         { *m = CMakeBuilder{} }
func (m *CMakeBuilder) String() string { return proto.CompactTextString(m) }
func (*CMakeBuilder) ProtoMessage()    {}
func (*CMakeBuilder) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{2}
}

func (m *CMakeBuilder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMakeBuilder.Unmarshal(m, b)
}
func (m *CMakeBuilder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMakeBuilder.Marshal(b, m, deterministic)
}
func (m *CMakeBuilder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMakeBuilder.Merge(m, src)
}
func (m *CMakeBuilder) XXX_Size() int {
	return xxx_messageInfo_CMakeBuilder.Size(m)
}
func (m *CMakeBuilder) XXX_DiscardUnknown() {
	xxx_messageInfo_CMakeBuilder.DiscardUnknown(m)
}

var xxx_messageInfo_CMakeBuilder proto.InternalMessageInfo

func (m *CMakeBuilder) GetExtraCmakeFlag() []string {
	if m != nil {
		return m.ExtraCmakeFlag
	}
	return nil
}

type MesonBuilder struct {
	// Additional flag to pass to meson(1), e.g.:
	// extra_meson_flag: "-Dsystemdsystemunitdir=${DISTRI_PREFIX}/lib/systemd/system"
	ExtraMesonFlag       []string `protobuf:"bytes,1,rep,name=extra_meson_flag,json=extraMesonFlag" json:"extra_meson_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MesonBuilder) Reset()         { *m = MesonBuilder{} }
func (m *MesonBuilder) String() string { return proto.CompactTextString(m) }
func (*MesonBuilder) ProtoMessage()    {}
func (*MesonBuilder) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{3}
}

func (m *MesonBuilder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MesonBuilder.Unmarshal(m, b)
}
func (m *MesonBuilder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MesonBuilder.Marshal(b, m, deterministic)
}
func (m *MesonBuilder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MesonBuilder.Merge(m, src)
}
func (m *MesonBuilder) XXX_Size() int {
	return xxx_messageInfo_MesonBuilder.Size(m)
}
func (m *MesonBuilder) XXX_DiscardUnknown() {
	xxx_messageInfo_MesonBuilder.DiscardUnknown(m)
}

var xxx_messageInfo_MesonBuilder proto.InternalMessageInfo

func (m *MesonBuilder) GetExtraMesonFlag() []string {
	if m != nil {
		return m.ExtraMesonFlag
	}
	return nil
}

type PerlBuilder struct {
	// Extra flags to be specified when running Makefile.PL, e.g.
	// EXPATLIBPATH=/ro/expat-2.2.6/buildoutput/lib
	ExtraMakefileFlag    []string `protobuf:"bytes,1,rep,name=extra_makefile_flag,json=extraMakefileFlag" json:"extra_makefile_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PerlBuilder) Reset()         { *m = PerlBuilder{} }
func (m *PerlBuilder) String() string { return proto.CompactTextString(m) }
func (*PerlBuilder) ProtoMessage()    {}
func (*PerlBuilder) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{4}
}

func (m *PerlBuilder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerlBuilder.Unmarshal(m, b)
}
func (m *PerlBuilder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerlBuilder.Marshal(b, m, deterministic)
}
func (m *PerlBuilder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerlBuilder.Merge(m, src)
}
func (m *PerlBuilder) XXX_Size() int {
	return xxx_messageInfo_PerlBuilder.Size(m)
}
func (m *PerlBuilder) XXX_DiscardUnknown() {
	xxx_messageInfo_PerlBuilder.DiscardUnknown(m)
}

var xxx_messageInfo_PerlBuilder proto.InternalMessageInfo

func (m *PerlBuilder) GetExtraMakefileFlag() []string {
	if m != nil {
		return m.ExtraMakefileFlag
	}
	return nil
}

type PythonBuilder struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PythonBuilder) Reset()         { *m = PythonBuilder{} }
func (m *PythonBuilder) String() string { return proto.CompactTextString(m) }
func (*PythonBuilder) ProtoMessage()    {}
func (*PythonBuilder) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{5}
}

func (m *PythonBuilder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PythonBuilder.Unmarshal(m, b)
}
func (m *PythonBuilder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PythonBuilder.Marshal(b, m, deterministic)
}
func (m *PythonBuilder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PythonBuilder.Merge(m, src)
}
func (m *PythonBuilder) XXX_Size() int {
	return xxx_messageInfo_PythonBuilder.Size(m)
}
func (m *PythonBuilder) XXX_DiscardUnknown() {
	xxx_messageInfo_PythonBuilder.DiscardUnknown(m)
}

var xxx_messageInfo_PythonBuilder proto.InternalMessageInfo

type GomodBuilder struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GomodBuilder) Reset()         { *m = GomodBuilder{} }
func (m *GomodBuilder) String() string { return proto.CompactTextString(m) }
func (*GomodBuilder) ProtoMessage()    {}
func (*GomodBuilder) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{6}
}

func (m *GomodBuilder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GomodBuilder.Unmarshal(m, b)
}
func (m *GomodBuilder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GomodBuilder.Marshal(b, m, deterministic)
}
func (m *GomodBuilder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GomodBuilder.Merge(m, src)
}
func (m *GomodBuilder) XXX_Size() int {
	return xxx_messageInfo_GomodBuilder.Size(m)
}
func (m *GomodBuilder) XXX_DiscardUnknown() {
	xxx_messageInfo_GomodBuilder.DiscardUnknown(m)
}

var xxx_messageInfo_GomodBuilder proto.InternalMessageInfo

type GoBuilder struct {
	// Additional flags to pass to “go install”, e.g. “./...” or “cmd/distri”.
	Install *string `protobuf:"bytes,1,opt,name=install" json:"install,omitempty"`
	// Import path of the package that is being built,
	// e.g. “github.com/junegunn/fzf”.
	//
	// Derived from the source URL by default; should usually not be specified.
	ImportPath *string `protobuf:"bytes,2,opt,name=import_path,json=importPath" json:"import_path,omitempty"`
	// Additional go environment variable to set when calling e.g. “go install”.
	// E.g. go_env: "CGO_ENABLED=0"
	GoEnv                []string `protobuf:"bytes,3,rep,name=go_env,json=goEnv" json:"go_env,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoBuilder) Reset()         { *m = GoBuilder{} }
func (m *GoBuilder) String() string { return proto.CompactTextString(m) }
func (*GoBuilder) ProtoMessage()    {}
func (*GoBuilder) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{7}
}

func (m *GoBuilder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoBuilder.Unmarshal(m, b)
}
func (m *GoBuilder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoBuilder.Marshal(b, m, deterministic)
}
func (m *GoBuilder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoBuilder.Merge(m, src)
}
func (m *GoBuilder) XXX_Size() int {
	return xxx_messageInfo_GoBuilder.Size(m)
}
func (m *GoBuilder) XXX_DiscardUnknown() {
	xxx_messageInfo_GoBuilder.DiscardUnknown(m)
}

var xxx_messageInfo_GoBuilder proto.InternalMessageInfo

func (m *GoBuilder) GetInstall() string {
	if m != nil && m.Install != nil {
		return *m.Install
	}
	return ""
}

func (m *GoBuilder) GetImportPath() string {
	if m != nil && m.ImportPath != nil {
		return *m.ImportPath
	}
	return ""
}

func (m *GoBuilder) GetGoEnv() []string {
	if m != nil {
		return m.GoEnv
	}
	return nil
}

type Install struct {
	SystemdUnit []string `protobuf:"bytes,1,rep,name=systemd_unit,json=systemdUnit" json:"systemd_unit,omitempty"`
	// Create a symbolic link.
	Symlink []*Install_Symlink `protobuf:"bytes,2,rep,name=symlink" json:"symlink,omitempty"`
	// Create an empty directory with the specified name.
	EmptyDir []string `protobuf:"bytes,3,rep,name=empty_dir,json=emptyDir" json:"empty_dir,omitempty"`
	// Change the mode of a file.
	Chmod []*Install_Chmod `protobuf:"bytes,4,rep,name=chmod" json:"chmod,omitempty"`
	// Apply a file-based capability.
	Capability []*Install_Cap `protobuf:"bytes,5,rep,name=capability" json:"capability,omitempty"`
	// Install a file.
	File []*Install_File `protobuf:"bytes,6,rep,name=file" json:"file,omitempty"`
	// Rename an installed file.
	Rename []*Install_Rename `protobuf:"bytes,7,rep,name=rename" json:"rename,omitempty"`
	// Delete a file.
	Delete               []string `protobuf:"bytes,8,rep,name=delete" json:"delete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Install) Reset()         { *m = Install{} }
func (m *Install) String() string { return proto.CompactTextString(m) }
func (*Install) ProtoMessage()    {}
func (*Install) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{8}
}

func (m *Install) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Install.Unmarshal(m, b)
}
func (m *Install) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Install.Marshal(b, m, deterministic)
}
func (m *Install) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Install.Merge(m, src)
}
func (m *Install) XXX_Size() int {
	return xxx_messageInfo_Install.Size(m)
}
func (m *Install) XXX_DiscardUnknown() {
	xxx_messageInfo_Install.DiscardUnknown(m)
}

var xxx_messageInfo_Install proto.InternalMessageInfo

func (m *Install) GetSystemdUnit() []string {
	if m != nil {
		return m.SystemdUnit
	}
	return nil
}

func (m *Install) GetSymlink() []*Install_Symlink {
	if m != nil {
		return m.Symlink
	}
	return nil
}

func (m *Install) GetEmptyDir() []string {
	if m != nil {
		return m.EmptyDir
	}
	return nil
}

func (m *Install) GetChmod() []*Install_Chmod {
	if m != nil {
		return m.Chmod
	}
	return nil
}

func (m *Install) GetCapability() []*Install_Cap {
	if m != nil {
		return m.Capability
	}
	return nil
}

func (m *Install) GetFile() []*Install_File {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *Install) GetRename() []*Install_Rename {
	if m != nil {
		return m.Rename
	}
	return nil
}

func (m *Install) GetDelete() []string {
	if m != nil {
		return m.Delete
	}
	return nil
}

type Install_Symlink struct {
	// The symbolic link target.
	Oldname *string `protobuf:"bytes,1,opt,name=oldname" json:"oldname,omitempty"`
	// The filename of the symbolic link to create.
	Newname              *string  `protobuf:"bytes,2,opt,name=newname" json:"newname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Install_Symlink) Reset()         { *m = Install_Symlink{} }
func (m *Install_Symlink) String() string { return proto.CompactTextString(m) }
func (*Install_Symlink) ProtoMessage()    {}
func (*Install_Symlink) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{8, 0}
}

func (m *Install_Symlink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Install_Symlink.Unmarshal(m, b)
}
func (m *Install_Symlink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Install_Symlink.Marshal(b, m, deterministic)
}
func (m *Install_Symlink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Install_Symlink.Merge(m, src)
}
func (m *Install_Symlink) XXX_Size() int {
	return xxx_messageInfo_Install_Symlink.Size(m)
}
func (m *Install_Symlink) XXX_DiscardUnknown() {
	xxx_messageInfo_Install_Symlink.DiscardUnknown(m)
}

var xxx_messageInfo_Install_Symlink proto.InternalMessageInfo

func (m *Install_Symlink) GetOldname() string {
	if m != nil && m.Oldname != nil {
		return *m.Oldname
	}
	return ""
}

func (m *Install_Symlink) GetNewname() string {
	if m != nil && m.Newname != nil {
		return *m.Newname
	}
	return ""
}

type Install_Chmod struct {
	// Whether to set the setuid bit.
	Setuid *bool `protobuf:"varint,1,opt,name=setuid" json:"setuid,omitempty"`
	// TODO: rename to filename for consistency
	// The filename of the file whose mode to change
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Install_Chmod) Reset()         { *m = Install_Chmod{} }
func (m *Install_Chmod) String() string { return proto.CompactTextString(m) }
func (*Install_Chmod) ProtoMessage()    {}
func (*Install_Chmod) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{8, 1}
}

func (m *Install_Chmod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Install_Chmod.Unmarshal(m, b)
}
func (m *Install_Chmod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Install_Chmod.Marshal(b, m, deterministic)
}
func (m *Install_Chmod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Install_Chmod.Merge(m, src)
}
func (m *Install_Chmod) XXX_Size() int {
	return xxx_messageInfo_Install_Chmod.Size(m)
}
func (m *Install_Chmod) XXX_DiscardUnknown() {
	xxx_messageInfo_Install_Chmod.DiscardUnknown(m)
}

var xxx_messageInfo_Install_Chmod proto.InternalMessageInfo

func (m *Install_Chmod) GetSetuid() bool {
	if m != nil && m.Setuid != nil {
		return *m.Setuid
	}
	return false
}

func (m *Install_Chmod) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type Install_Cap struct {
	Capability           *string  `protobuf:"bytes,2,opt,name=capability" json:"capability,omitempty"`
	Filename             *string  `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Install_Cap) Reset()         { *m = Install_Cap{} }
func (m *Install_Cap) String() string { return proto.CompactTextString(m) }
func (*Install_Cap) ProtoMessage()    {}
func (*Install_Cap) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{8, 2}
}

func (m *Install_Cap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Install_Cap.Unmarshal(m, b)
}
func (m *Install_Cap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Install_Cap.Marshal(b, m, deterministic)
}
func (m *Install_Cap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Install_Cap.Merge(m, src)
}
func (m *Install_Cap) XXX_Size() int {
	return xxx_messageInfo_Install_Cap.Size(m)
}
func (m *Install_Cap) XXX_DiscardUnknown() {
	xxx_messageInfo_Install_Cap.DiscardUnknown(m)
}

var xxx_messageInfo_Install_Cap proto.InternalMessageInfo

func (m *Install_Cap) GetCapability() string {
	if m != nil && m.Capability != nil {
		return *m.Capability
	}
	return ""
}

func (m *Install_Cap) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

type Install_File struct {
	Srcpath              *string  `protobuf:"bytes,1,opt,name=srcpath" json:"srcpath,omitempty"`
	Destpath             *string  `protobuf:"bytes,2,opt,name=destpath" json:"destpath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Install_File) Reset()         { *m = Install_File{} }
func (m *Install_File) String() string { return proto.CompactTextString(m) }
func (*Install_File) ProtoMessage()    {}
func (*Install_File) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{8, 3}
}

func (m *Install_File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Install_File.Unmarshal(m, b)
}
func (m *Install_File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Install_File.Marshal(b, m, deterministic)
}
func (m *Install_File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Install_File.Merge(m, src)
}
func (m *Install_File) XXX_Size() int {
	return xxx_messageInfo_Install_File.Size(m)
}
func (m *Install_File) XXX_DiscardUnknown() {
	xxx_messageInfo_Install_File.DiscardUnknown(m)
}

var xxx_messageInfo_Install_File proto.InternalMessageInfo

func (m *Install_File) GetSrcpath() string {
	if m != nil && m.Srcpath != nil {
		return *m.Srcpath
	}
	return ""
}

func (m *Install_File) GetDestpath() string {
	if m != nil && m.Destpath != nil {
		return *m.Destpath
	}
	return ""
}

type Install_Rename struct {
	Oldname              *string  `protobuf:"bytes,1,opt,name=oldname" json:"oldname,omitempty"`
	Newname              *string  `protobuf:"bytes,2,opt,name=newname" json:"newname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Install_Rename) Reset()         { *m = Install_Rename{} }
func (m *Install_Rename) String() string { return proto.CompactTextString(m) }
func (*Install_Rename) ProtoMessage()    {}
func (*Install_Rename) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{8, 4}
}

func (m *Install_Rename) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Install_Rename.Unmarshal(m, b)
}
func (m *Install_Rename) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Install_Rename.Marshal(b, m, deterministic)
}
func (m *Install_Rename) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Install_Rename.Merge(m, src)
}
func (m *Install_Rename) XXX_Size() int {
	return xxx_messageInfo_Install_Rename.Size(m)
}
func (m *Install_Rename) XXX_DiscardUnknown() {
	xxx_messageInfo_Install_Rename.DiscardUnknown(m)
}

var xxx_messageInfo_Install_Rename proto.InternalMessageInfo

func (m *Install_Rename) GetOldname() string {
	if m != nil && m.Oldname != nil {
		return *m.Oldname
	}
	return ""
}

func (m *Install_Rename) GetNewname() string {
	if m != nil && m.Newname != nil {
		return *m.Newname
	}
	return ""
}

type Claim struct {
	// glob pattern, interpreted by Go’s
	// https://golang.org/pkg/path/filepath/#Glob
	Glob *string `protobuf:"bytes,1,opt,name=glob" json:"glob,omitempty"`
	// Overwrite the destination directory within the split package.
	Dir                  *string  `protobuf:"bytes,2,opt,name=dir" json:"dir,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Claim) Reset()         { *m = Claim{} }
func (m *Claim) String() string { return proto.CompactTextString(m) }
func (*Claim) ProtoMessage()    {}
func (*Claim) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{9}
}

func (m *Claim) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Claim.Unmarshal(m, b)
}
func (m *Claim) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Claim.Marshal(b, m, deterministic)
}
func (m *Claim) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Claim.Merge(m, src)
}
func (m *Claim) XXX_Size() int {
	return xxx_messageInfo_Claim.Size(m)
}
func (m *Claim) XXX_DiscardUnknown() {
	xxx_messageInfo_Claim.DiscardUnknown(m)
}

var xxx_messageInfo_Claim proto.InternalMessageInfo

func (m *Claim) GetGlob() string {
	if m != nil && m.Glob != nil {
		return *m.Glob
	}
	return ""
}

func (m *Claim) GetDir() string {
	if m != nil && m.Dir != nil {
		return *m.Dir
	}
	return ""
}

type SplitPackage struct {
	// Name of the split package, e.g. gcc-libs
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// A claim specifies which files this split package claims for itself.
	Claim []*Claim `protobuf:"bytes,3,rep,name=claim" json:"claim,omitempty"`
	// Additional run-time dependencies which are not automatically found, for
	// this split package.
	RuntimeDep           []string `protobuf:"bytes,2,rep,name=runtime_dep,json=runtimeDep" json:"runtime_dep,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SplitPackage) Reset()         { *m = SplitPackage{} }
func (m *SplitPackage) String() string { return proto.CompactTextString(m) }
func (*SplitPackage) ProtoMessage()    {}
func (*SplitPackage) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{10}
}

func (m *SplitPackage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SplitPackage.Unmarshal(m, b)
}
func (m *SplitPackage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SplitPackage.Marshal(b, m, deterministic)
}
func (m *SplitPackage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SplitPackage.Merge(m, src)
}
func (m *SplitPackage) XXX_Size() int {
	return xxx_messageInfo_SplitPackage.Size(m)
}
func (m *SplitPackage) XXX_DiscardUnknown() {
	xxx_messageInfo_SplitPackage.DiscardUnknown(m)
}

var xxx_messageInfo_SplitPackage proto.InternalMessageInfo

func (m *SplitPackage) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SplitPackage) GetClaim() []*Claim {
	if m != nil {
		return m.Claim
	}
	return nil
}

func (m *SplitPackage) GetRuntimeDep() []string {
	if m != nil {
		return m.RuntimeDep
	}
	return nil
}

type Union struct {
	// Directory (within the package) to overlay on top of pkg,
	// e.g. “out/lib/irssi/modules”
	Dir *string `protobuf:"bytes,1,opt,name=dir" json:"dir,omitempty"`
	// distri package on top of which to overlay our files, e.g. “irssi”
	Pkg                  *string  `protobuf:"bytes,2,opt,name=pkg" json:"pkg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Union) Reset()         { *m = Union{} }
func (m *Union) String() string { return proto.CompactTextString(m) }
func (*Union) ProtoMessage()    {}
func (*Union) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{11}
}

func (m *Union) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Union.Unmarshal(m, b)
}
func (m *Union) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Union.Marshal(b, m, deterministic)
}
func (m *Union) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Union.Merge(m, src)
}
func (m *Union) XXX_Size() int {
	return xxx_messageInfo_Union.Size(m)
}
func (m *Union) XXX_DiscardUnknown() {
	xxx_messageInfo_Union.DiscardUnknown(m)
}

var xxx_messageInfo_Union proto.InternalMessageInfo

func (m *Union) GetDir() string {
	if m != nil && m.Dir != nil {
		return *m.Dir
	}
	return ""
}

func (m *Union) GetPkg() string {
	if m != nil && m.Pkg != nil {
		return *m.Pkg
	}
	return ""
}

type Pull struct {
	// URL (https:// preferred, http:// accepted) to a Debian repository Packages
	// file. E.g. https://dl.google.com/linux/chrome/deb/dists/stable/main/binary-amd64/Packages
	DebianPackages *string `protobuf:"bytes,1,opt,name=debian_packages,json=debianPackages" json:"debian_packages,omitempty"`
	// URL (https:// preferred, http:// accepted) to a page listing at least the
	// latest release (or multiple releases).
	ReleasesUrl          *string  `protobuf:"bytes,2,opt,name=releases_url,json=releasesUrl" json:"releases_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pull) Reset()         { *m = Pull{} }
func (m *Pull) String() string { return proto.CompactTextString(m) }
func (*Pull) ProtoMessage()    {}
func (*Pull) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{12}
}

func (m *Pull) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pull.Unmarshal(m, b)
}
func (m *Pull) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pull.Marshal(b, m, deterministic)
}
func (m *Pull) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pull.Merge(m, src)
}
func (m *Pull) XXX_Size() int {
	return xxx_messageInfo_Pull.Size(m)
}
func (m *Pull) XXX_DiscardUnknown() {
	xxx_messageInfo_Pull.DiscardUnknown(m)
}

var xxx_messageInfo_Pull proto.InternalMessageInfo

func (m *Pull) GetDebianPackages() string {
	if m != nil && m.DebianPackages != nil {
		return *m.DebianPackages
	}
	return ""
}

func (m *Pull) GetReleasesUrl() string {
	if m != nil && m.ReleasesUrl != nil {
		return *m.ReleasesUrl
	}
	return ""
}

type Build struct {
	// A https URL to the upstream archive that should be built. Currently, only
	// tar.gz archives are supported.
	Source *string `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	// Details about how to pull a new version.
	Pull *Pull `protobuf:"bytes,19,opt,name=pull" json:"pull,omitempty"`
	// A SHA256 hash of the upstream archive, for verifying integrity.
	Hash *string `protobuf:"bytes,2,opt,name=hash" json:"hash,omitempty"`
	// The version number of this package, in format
	// `<upstream-version>-<distri-revision>`, e.g. `2.12-4`. The distri package
	// revision is a monotonically increasing number (even when the upstream
	// version changes!).
	//
	// The name of the package is the directory which contains `build.textproto`,
	// and the resulting package will be named `<package-name>-<version>`, so a
	// full package can be referenced by e.g. `i3status-amd64-2.12-4`.
	Version *string `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
	// The filename of a file (relative to the directory containing `build.textproto`)
	// to copy into the source directory as-is. Could also be achieved by using
	// `cherry_pick`, but files are a little bit easier to maintain this way.
	ExtraFile []string `protobuf:"bytes,17,rep,name=extra_file,json=extraFile" json:"extra_file,omitempty"`
	// The filename of a patch (relative to the directory containing
	// `build.textproto`) to apply after extracting the upstream archive. The
	// order of directives is the order in which the patches are applied.
	CherryPick []string `protobuf:"bytes,6,rep,name=cherry_pick,json=cherryPick" json:"cherry_pick,omitempty"`
	// Enable if this package does not support building from a separate directory
	// (sometimes called “out-of-tree build”). A bug should be reported with the
	// package upstream.
	CopyToBuilddir *bool `protobuf:"varint,20,opt,name=copy_to_builddir,json=copyToBuilddir" json:"copy_to_builddir,omitempty"`
	// TODO: rename to build_dep
	Dep []string `protobuf:"bytes,5,rep,name=dep" json:"dep,omitempty"`
	// TODO: move this field into a custom builder
	// Overwrites the chosen builder’s default build steps.
	BuildStep []*BuildStep `protobuf:"bytes,4,rep,name=build_step,json=buildStep" json:"build_step,omitempty"`
	// Types that are valid to be assigned to Builder:
	//	*Build_Cbuilder
	//	*Build_Cmakebuilder
	//	*Build_Mesonbuilder
	//	*Build_Perlbuilder
	//	*Build_Pythonbuilder
	//	*Build_Gomodbuilder
	//	*Build_Gobuilder
	Builder isBuild_Builder `protobuf_oneof:"builder"`
	// Additional run-time dependencies which are not automatically found.
	RuntimeDep []string `protobuf:"bytes,9,rep,name=runtime_dep,json=runtimeDep" json:"runtime_dep,omitempty"`
	// Additional steps to perform after the build completed.
	Install *Install `protobuf:"bytes,8,opt,name=install" json:"install,omitempty"`
	// Split files out of the resulting package into separate packages. This
	// feature should be used sparingly: prefer sticking to the mental model that
	// one package build instruction file results in one distri package.
	//
	// Use cases include fine grained dependencies (e.g. gcc-libs split out of
	// gcc) or breaking dependency cycles for bootstrap packages (e.g. libudev
	// split out of systemd).
	SplitPackage []*SplitPackage `protobuf:"bytes,11,rep,name=split_package,json=splitPackage" json:"split_package,omitempty"`
	// Runtime union directories are used to implement per-package exchange
	// directories (as opposed to global exchange directories). This is to be used
	// for tight coupling situations, e.g. when a plugin mechanism does not
	// guarantee ABI compatibility across versions.
	RuntimeUnion         []*Union `protobuf:"bytes,15,rep,name=runtime_union,json=runtimeUnion" json:"runtime_union,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Build) Reset()         { *m = Build{} }
func (m *Build) String() string { return proto.CompactTextString(m) }
func (*Build) ProtoMessage()    {}
func (*Build) Descriptor() ([]byte, []int) {
	return fileDescriptor_14ce178a580e4ede, []int{13}
}

func (m *Build) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Build.Unmarshal(m, b)
}
func (m *Build) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Build.Marshal(b, m, deterministic)
}
func (m *Build) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Build.Merge(m, src)
}
func (m *Build) XXX_Size() int {
	return xxx_messageInfo_Build.Size(m)
}
func (m *Build) XXX_DiscardUnknown() {
	xxx_messageInfo_Build.DiscardUnknown(m)
}

var xxx_messageInfo_Build proto.InternalMessageInfo

func (m *Build) GetSource() string {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return ""
}

func (m *Build) GetPull() *Pull {
	if m != nil {
		return m.Pull
	}
	return nil
}

func (m *Build) GetHash() string {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return ""
}

func (m *Build) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *Build) GetExtraFile() []string {
	if m != nil {
		return m.ExtraFile
	}
	return nil
}

func (m *Build) GetCherryPick() []string {
	if m != nil {
		return m.CherryPick
	}
	return nil
}

func (m *Build) GetCopyToBuilddir() bool {
	if m != nil && m.CopyToBuilddir != nil {
		return *m.CopyToBuilddir
	}
	return false
}

func (m *Build) GetDep() []string {
	if m != nil {
		return m.Dep
	}
	return nil
}

func (m *Build) GetBuildStep() []*BuildStep {
	if m != nil {
		return m.BuildStep
	}
	return nil
}

type isBuild_Builder interface {
	isBuild_Builder()
}

type Build_Cbuilder struct {
	Cbuilder *CBuilder `protobuf:"bytes,7,opt,name=cbuilder,oneof"`
}

type Build_Cmakebuilder struct {
	Cmakebuilder *CMakeBuilder `protobuf:"bytes,14,opt,name=cmakebuilder,oneof"`
}

type Build_Mesonbuilder struct {
	Mesonbuilder *MesonBuilder `protobuf:"bytes,16,opt,name=mesonbuilder,oneof"`
}

type Build_Perlbuilder struct {
	Perlbuilder *PerlBuilder `protobuf:"bytes,10,opt,name=perlbuilder,oneof"`
}

type Build_Pythonbuilder struct {
	Pythonbuilder *PythonBuilder `protobuf:"bytes,12,opt,name=pythonbuilder,oneof"`
}

type Build_Gomodbuilder struct {
	Gomodbuilder *GomodBuilder `protobuf:"bytes,13,opt,name=gomodbuilder,oneof"`
}

type Build_Gobuilder struct {
	Gobuilder *GoBuilder `protobuf:"bytes,18,opt,name=gobuilder,oneof"`
}

func (*Build_Cbuilder) isBuild_Builder() {}

func (*Build_Cmakebuilder) isBuild_Builder() {}

func (*Build_Mesonbuilder) isBuild_Builder() {}

func (*Build_Perlbuilder) isBuild_Builder() {}

func (*Build_Pythonbuilder) isBuild_Builder() {}

func (*Build_Gomodbuilder) isBuild_Builder() {}

func (*Build_Gobuilder) isBuild_Builder() {}

func (m *Build) GetBuilder() isBuild_Builder {
	if m != nil {
		return m.Builder
	}
	return nil
}

func (m *Build) GetCbuilder() *CBuilder {
	if x, ok := m.GetBuilder().(*Build_Cbuilder); ok {
		return x.Cbuilder
	}
	return nil
}

func (m *Build) GetCmakebuilder() *CMakeBuilder {
	if x, ok := m.GetBuilder().(*Build_Cmakebuilder); ok {
		return x.Cmakebuilder
	}
	return nil
}

func (m *Build) GetMesonbuilder() *MesonBuilder {
	if x, ok := m.GetBuilder().(*Build_Mesonbuilder); ok {
		return x.Mesonbuilder
	}
	return nil
}

func (m *Build) GetPerlbuilder() *PerlBuilder {
	if x, ok := m.GetBuilder().(*Build_Perlbuilder); ok {
		return x.Perlbuilder
	}
	return nil
}

func (m *Build) GetPythonbuilder() *PythonBuilder {
	if x, ok := m.GetBuilder().(*Build_Pythonbuilder); ok {
		return x.Pythonbuilder
	}
	return nil
}

func (m *Build) GetGomodbuilder() *GomodBuilder {
	if x, ok := m.GetBuilder().(*Build_Gomodbuilder); ok {
		return x.Gomodbuilder
	}
	return nil
}

func (m *Build) GetGobuilder() *GoBuilder {
	if x, ok := m.GetBuilder().(*Build_Gobuilder); ok {
		return x.Gobuilder
	}
	return nil
}

func (m *Build) GetRuntimeDep() []string {
	if m != nil {
		return m.RuntimeDep
	}
	return nil
}

func (m *Build) GetInstall() *Install {
	if m != nil {
		return m.Install
	}
	return nil
}

func (m *Build) GetSplitPackage() []*SplitPackage {
	if m != nil {
		return m.SplitPackage
	}
	return nil
}

func (m *Build) GetRuntimeUnion() []*Union {
	if m != nil {
		return m.RuntimeUnion
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Build) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Build_OneofMarshaler, _Build_OneofUnmarshaler, _Build_OneofSizer, []interface{}{
		(*Build_Cbuilder)(nil),
		(*Build_Cmakebuilder)(nil),
		(*Build_Mesonbuilder)(nil),
		(*Build_Perlbuilder)(nil),
		(*Build_Pythonbuilder)(nil),
		(*Build_Gomodbuilder)(nil),
		(*Build_Gobuilder)(nil),
	}
}

func _Build_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Build)
	// builder
	switch x := m.Builder.(type) {
	case *Build_Cbuilder:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cbuilder); err != nil {
			return err
		}
	case *Build_Cmakebuilder:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cmakebuilder); err != nil {
			return err
		}
	case *Build_Mesonbuilder:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Mesonbuilder); err != nil {
			return err
		}
	case *Build_Perlbuilder:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Perlbuilder); err != nil {
			return err
		}
	case *Build_Pythonbuilder:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Pythonbuilder); err != nil {
			return err
		}
	case *Build_Gomodbuilder:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Gomodbuilder); err != nil {
			return err
		}
	case *Build_Gobuilder:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Gobuilder); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Build.Builder has unexpected type %T", x)
	}
	return nil
}

func _Build_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Build)
	switch tag {
	case 7: // builder.cbuilder
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CBuilder)
		err := b.DecodeMessage(msg)
		m.Builder = &Build_Cbuilder{msg}
		return true, err
	case 14: // builder.cmakebuilder
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CMakeBuilder)
		err := b.DecodeMessage(msg)
		m.Builder = &Build_Cmakebuilder{msg}
		return true, err
	case 16: // builder.mesonbuilder
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MesonBuilder)
		err := b.DecodeMessage(msg)
		m.Builder = &Build_Mesonbuilder{msg}
		return true, err
	case 10: // builder.perlbuilder
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PerlBuilder)
		err := b.DecodeMessage(msg)
		m.Builder = &Build_Perlbuilder{msg}
		return true, err
	case 12: // builder.pythonbuilder
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PythonBuilder)
		err := b.DecodeMessage(msg)
		m.Builder = &Build_Pythonbuilder{msg}
		return true, err
	case 13: // builder.gomodbuilder
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GomodBuilder)
		err := b.DecodeMessage(msg)
		m.Builder = &Build_Gomodbuilder{msg}
		return true, err
	case 18: // builder.gobuilder
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GoBuilder)
		err := b.DecodeMessage(msg)
		m.Builder = &Build_Gobuilder{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Build_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Build)
	// builder
	switch x := m.Builder.(type) {
	case *Build_Cbuilder:
		s := proto.Size(x.Cbuilder)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Build_Cmakebuilder:
		s := proto.Size(x.Cmakebuilder)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Build_Mesonbuilder:
		s := proto.Size(x.Mesonbuilder)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Build_Perlbuilder:
		s := proto.Size(x.Perlbuilder)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Build_Pythonbuilder:
		s := proto.Size(x.Pythonbuilder)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Build_Gomodbuilder:
		s := proto.Size(x.Gomodbuilder)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Build_Gobuilder:
		s := proto.Size(x.Gobuilder)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*BuildStep)(nil), "pb.BuildStep")
	proto.RegisterType((*CBuilder)(nil), "pb.CBuilder")
	proto.RegisterType((*CMakeBuilder)(nil), "pb.CMakeBuilder")
	proto.RegisterType((*MesonBuilder)(nil), "pb.MesonBuilder")
	proto.RegisterType((*PerlBuilder)(nil), "pb.PerlBuilder")
	proto.RegisterType((*PythonBuilder)(nil), "pb.PythonBuilder")
	proto.RegisterType((*GomodBuilder)(nil), "pb.GomodBuilder")
	proto.RegisterType((*GoBuilder)(nil), "pb.GoBuilder")
	proto.RegisterType((*Install)(nil), "pb.Install")
	proto.RegisterType((*Install_Symlink)(nil), "pb.Install.Symlink")
	proto.RegisterType((*Install_Chmod)(nil), "pb.Install.Chmod")
	proto.RegisterType((*Install_Cap)(nil), "pb.Install.Cap")
	proto.RegisterType((*Install_File)(nil), "pb.Install.File")
	proto.RegisterType((*Install_Rename)(nil), "pb.Install.Rename")
	proto.RegisterType((*Claim)(nil), "pb.Claim")
	proto.RegisterType((*SplitPackage)(nil), "pb.SplitPackage")
	proto.RegisterType((*Union)(nil), "pb.Union")
	proto.RegisterType((*Pull)(nil), "pb.Pull")
	proto.RegisterType((*Build)(nil), "pb.Build")
}

func init() { proto.RegisterFile("build.proto", fileDescriptor_14ce178a580e4ede) }

var fileDescriptor_14ce178a580e4ede = []byte{
	// 1041 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0x6d, 0x8f, 0xdb, 0x44,
	0x10, 0xbe, 0x34, 0xaf, 0x1e, 0x27, 0xf7, 0xb2, 0x57, 0x90, 0x15, 0x5e, 0xee, 0x1a, 0x01, 0x8d,
	0x0a, 0x17, 0xd0, 0x55, 0x20, 0x90, 0xda, 0x0f, 0x34, 0xa5, 0x3d, 0x24, 0x2a, 0x45, 0x3e, 0xee,
	0x23, 0xb2, 0x1c, 0x7b, 0xcf, 0x59, 0x65, 0x6d, 0xaf, 0xec, 0xf5, 0x41, 0x7e, 0x11, 0xff, 0x83,
	0x3f, 0xc4, 0x5f, 0x40, 0x33, 0xde, 0x8d, 0x9d, 0xf6, 0x1b, 0xdf, 0x76, 0x66, 0x9e, 0x67, 0x76,
	0x66, 0x76, 0x67, 0x06, 0xdc, 0x75, 0x25, 0x64, 0xbc, 0x50, 0x45, 0xae, 0x73, 0xf6, 0x48, 0xad,
	0x67, 0x17, 0xe0, 0xbc, 0x42, 0xd5, 0xad, 0xe6, 0x8a, 0x31, 0xe8, 0x85, 0x45, 0xf2, 0xe0, 0x75,
	0x2e, 0xbb, 0x73, 0xc7, 0xa7, 0xf3, 0xec, 0xef, 0x0e, 0x8c, 0x96, 0x04, 0xe1, 0x05, 0xfb, 0x0e,
	0x1e, 0xf3, 0xbf, 0x74, 0x11, 0x06, 0x51, 0x9e, 0xdd, 0x8b, 0xa4, 0x2a, 0x78, 0x70, 0x2f, 0xc3,
	0xc4, 0x10, 0x18, 0xd9, 0x96, 0xd6, 0xf4, 0x46, 0x86, 0x09, 0xfb, 0x0a, 0x4e, 0x6a, 0x46, 0x1a,
	0x6e, 0x0d, 0xb8, 0x47, 0xe0, 0x09, 0xa9, 0xdf, 0x85, 0xdb, 0x1a, 0xf7, 0x39, 0x40, 0x58, 0xe9,
	0xbc, 0xe0, 0xe8, 0xd9, 0xeb, 0x5f, 0x76, 0xe6, 0x23, 0xbf, 0xa5, 0x61, 0x4f, 0x60, 0x5c, 0xfb,
	0x91, 0x31, 0x39, 0xe9, 0x92, 0x13, 0x97, 0x74, 0xbf, 0x91, 0x6a, 0xf6, 0x23, 0x8c, 0x97, 0xe8,
	0xcf, 0x06, 0x3b, 0x87, 0x53, 0x13, 0x6c, 0x73, 0x77, 0x1d, 0xe8, 0x71, 0x1d, 0x68, 0x6a, 0x2e,
	0x47, 0xe6, 0x3b, 0x5e, 0xe6, 0xd9, 0x07, 0xcc, 0x14, 0xb5, 0x1f, 0x32, 0x09, 0x4c, 0xcc, 0x97,
	0xe0, 0xae, 0x78, 0x21, 0x2d, 0x71, 0x01, 0xe7, 0x4d, 0xb6, 0xf7, 0x42, 0x1e, 0xdc, 0x7a, 0xb6,
	0xcf, 0x18, 0x2d, 0x44, 0x3f, 0x81, 0xc9, 0x6a, 0xa7, 0x37, 0xfb, 0x9b, 0x67, 0xc7, 0x30, 0x7e,
	0x9b, 0xa7, 0x79, 0x6c, 0xe5, 0x3f, 0xc0, 0x79, 0x9b, 0x5b, 0xef, 0x1e, 0x0c, 0x45, 0x56, 0xea,
	0x50, 0x4a, 0xaf, 0x73, 0xd9, 0x99, 0x3b, 0xbe, 0x15, 0xd9, 0x05, 0xb8, 0x22, 0x55, 0x79, 0xa1,
	0x03, 0x15, 0xea, 0x8d, 0xf7, 0x88, 0xac, 0x50, 0xab, 0x56, 0xa1, 0xde, 0xb0, 0x8f, 0x60, 0x90,
	0xe4, 0x01, 0xcf, 0x1e, 0x4c, 0xe1, 0xfa, 0x49, 0xfe, 0x4b, 0xf6, 0x30, 0xfb, 0xb7, 0x07, 0xc3,
	0x5f, 0x8d, 0x8f, 0x27, 0x30, 0x2e, 0x77, 0xa5, 0xe6, 0x69, 0x1c, 0x54, 0x99, 0xd0, 0x26, 0x68,
	0xd7, 0xe8, 0xee, 0x32, 0xa1, 0xd9, 0x15, 0x0c, 0xcb, 0x5d, 0x2a, 0x45, 0xb6, 0xf5, 0x1e, 0x5d,
	0x76, 0xe7, 0xee, 0xf5, 0xf9, 0x42, 0xad, 0x17, 0xc6, 0xc1, 0xe2, 0xb6, 0x36, 0xf9, 0x16, 0xc3,
	0x3e, 0x01, 0x87, 0xa7, 0x4a, 0xef, 0x82, 0x58, 0x14, 0xe6, 0xde, 0x11, 0x29, 0x5e, 0x8b, 0x82,
	0x3d, 0x85, 0x7e, 0xb4, 0x49, 0xf3, 0x98, 0xbe, 0x83, 0x7b, 0x7d, 0xd6, 0xf6, 0xb4, 0x44, 0x83,
	0x5f, 0xdb, 0xd9, 0xb7, 0x00, 0x51, 0xa8, 0xc2, 0xb5, 0x90, 0x42, 0xef, 0xbc, 0x3e, 0xa1, 0x4f,
	0x0e, 0xd0, 0xa1, 0xf2, 0x5b, 0x10, 0xf6, 0x05, 0xf4, 0xb0, 0xc0, 0xde, 0x80, 0xa0, 0xa7, 0x6d,
	0xe8, 0x1b, 0x21, 0xb9, 0x4f, 0x56, 0xf6, 0x0c, 0x06, 0x05, 0xcf, 0xc2, 0x94, 0x7b, 0x43, 0xc2,
	0xb1, 0x36, 0xce, 0x27, 0x8b, 0x6f, 0x10, 0xec, 0x63, 0x18, 0xc4, 0x5c, 0x72, 0xcd, 0xbd, 0x11,
	0x65, 0x61, 0xa4, 0xe9, 0x4b, 0x18, 0x9a, 0xa4, 0xf1, 0x6d, 0x72, 0x19, 0x93, 0x3f, 0xf3, 0x36,
	0x46, 0x44, 0x4b, 0xc6, 0xff, 0x24, 0x4b, 0xfd, 0x2e, 0x56, 0x9c, 0x3e, 0x87, 0x3e, 0x65, 0x8a,
	0xfe, 0x4b, 0xae, 0x2b, 0x11, 0x13, 0x77, 0xe4, 0x1b, 0x09, 0xfb, 0xb1, 0xc5, 0xa3, 0xf3, 0xf4,
	0x67, 0xe8, 0x2e, 0x43, 0x85, 0xfd, 0xd2, 0xaa, 0x8a, 0x79, 0xf0, 0x56, 0x11, 0xa6, 0x30, 0xc2,
	0x34, 0x5b, 0x01, 0xed, 0xe5, 0xe9, 0x0b, 0xe8, 0x61, 0x21, 0x30, 0xb2, 0xb2, 0x88, 0xe8, 0xc7,
	0x98, 0x98, 0x8d, 0x88, 0xec, 0x98, 0x97, 0xba, 0xf5, 0x99, 0xf6, 0xf2, 0xf4, 0x05, 0x0c, 0xea,
	0xf2, 0xfc, 0x9f, 0x9c, 0x67, 0x57, 0xd0, 0x5f, 0xca, 0x50, 0xa4, 0x98, 0x5b, 0x22, 0xf3, 0xb5,
	0x61, 0xd2, 0x99, 0x9d, 0x42, 0x17, 0xbf, 0x4a, 0x4d, 0xc1, 0xe3, 0x2c, 0x86, 0xf1, 0xad, 0x92,
	0x42, 0xaf, 0xc2, 0x68, 0x1b, 0x26, 0x7c, 0x5f, 0x91, 0x4e, 0x53, 0x11, 0x76, 0x01, 0xfd, 0x08,
	0x5d, 0xd2, 0x17, 0x73, 0xaf, 0x1d, 0x7c, 0x48, 0xba, 0xc3, 0xaf, 0xf5, 0xd8, 0x1d, 0x45, 0x95,
	0x69, 0x91, 0xf2, 0x20, 0xe6, 0x8a, 0xbe, 0xae, 0xe3, 0x83, 0x51, 0xbd, 0xe6, 0x6a, 0xf6, 0x35,
	0xf4, 0xef, 0x32, 0x91, 0x67, 0x36, 0x80, 0xce, 0x3e, 0x00, 0xd4, 0xa8, 0x6d, 0x62, 0x43, 0x52,
	0xdb, 0x64, 0xe6, 0x43, 0x6f, 0x55, 0x49, 0xc9, 0x9e, 0xc2, 0x49, 0xcc, 0xd7, 0x22, 0xcc, 0x02,
	0x55, 0x07, 0x57, 0x1a, 0xde, 0x71, 0xad, 0x36, 0x21, 0x97, 0xd8, 0x58, 0x05, 0x97, 0x3c, 0x2c,
	0x79, 0x19, 0x54, 0x85, 0x34, 0xbe, 0x5c, 0xab, 0xbb, 0x2b, 0xe4, 0xec, 0x9f, 0x01, 0xf4, 0xa9,
	0xcb, 0xe9, 0x2b, 0xe4, 0x55, 0x11, 0xd9, 0x14, 0x8d, 0xc4, 0x3e, 0x85, 0x9e, 0xaa, 0xa4, 0xf4,
	0xce, 0x2f, 0x3b, 0x73, 0xf7, 0x7a, 0x84, 0x39, 0x62, 0x14, 0x3e, 0x69, 0xb1, 0x2c, 0x9b, 0xb0,
	0xb4, 0x6f, 0x45, 0x67, 0x7c, 0x83, 0x07, 0x5e, 0x94, 0x22, 0xcf, 0xbc, 0x6e, 0xfd, 0x06, 0x46,
	0x64, 0x9f, 0x01, 0xd4, 0x53, 0x8a, 0xda, 0xe4, 0x8c, 0xca, 0xe1, 0x90, 0x86, 0xbe, 0xc5, 0x05,
	0xb8, 0xd1, 0x86, 0x17, 0xc5, 0x2e, 0x50, 0x22, 0xda, 0x52, 0x1b, 0xe1, 0xdf, 0x22, 0xd5, 0x4a,
	0x44, 0x5b, 0x1c, 0x8f, 0x51, 0xae, 0x76, 0x81, 0xce, 0x03, 0x5a, 0x27, 0x58, 0xb2, 0xc7, 0xf4,
	0x71, 0x8f, 0x51, 0xff, 0x7b, 0x3d, 0xb0, 0x4c, 0xf5, 0xb0, 0xe2, 0x7d, 0x72, 0x81, 0x47, 0xf6,
	0x0d, 0x00, 0x71, 0x82, 0x52, 0x73, 0x65, 0x7a, 0x7f, 0x82, 0xd9, 0xec, 0xb7, 0x90, 0xef, 0xac,
	0xf7, 0x0b, 0xe9, 0x19, 0x8c, 0xa2, 0x75, 0x3d, 0xfd, 0xbc, 0x21, 0x65, 0x3e, 0xa6, 0xd7, 0x35,
	0x13, 0xf1, 0xe6, 0xc8, 0xdf, 0xdb, 0xd9, 0x0f, 0x30, 0xa6, 0x41, 0x6f, 0xf1, 0xc7, 0x84, 0xa7,
	0xf6, 0x6f, 0xaf, 0x85, 0x9b, 0x23, 0xff, 0x00, 0x87, 0x3c, 0x1a, 0xf3, 0x96, 0x77, 0xda, 0xf0,
	0xda, 0x4b, 0x01, 0x79, 0x6d, 0x1c, 0x7b, 0x0e, 0xae, 0xe2, 0x85, 0xb4, 0x34, 0x20, 0x1a, 0x0d,
	0xa6, 0xd6, 0x46, 0xb8, 0x39, 0xf2, 0xdb, 0x28, 0xf6, 0x13, 0x4c, 0x14, 0x0d, 0x7c, 0x4b, 0x1b,
	0x13, 0x8d, 0xa6, 0xdf, 0xc1, 0x26, 0xb8, 0x39, 0xf2, 0x0f, 0x91, 0x18, 0x67, 0x82, 0xab, 0xc1,
	0x32, 0x27, 0x4d, 0x9c, 0xed, 0x95, 0x81, 0x71, 0xb6, 0x71, 0xec, 0x0a, 0x9c, 0x24, 0xb7, 0x24,
	0x46, 0xa4, 0x49, 0x4d, 0x6a, 0x18, 0x0d, 0xe2, 0xfd, 0x66, 0x71, 0xde, 0x6f, 0x16, 0xf6, 0x65,
	0xb3, 0x85, 0x46, 0xe4, 0xcd, 0x6d, 0x4d, 0xce, 0x66, 0x25, 0x7d, 0x0f, 0x93, 0x12, 0x3b, 0xd7,
	0x76, 0x87, 0xe7, 0x36, 0xe3, 0xb8, 0xdd, 0xd2, 0xfe, 0xb8, 0x6c, 0x37, 0xf8, 0x02, 0x26, 0xf6,
	0xfa, 0x0a, 0x5b, 0xd2, 0x3b, 0x69, 0x9a, 0x9a, 0x7a, 0xd4, 0x1f, 0x1b, 0x3b, 0x49, 0xaf, 0x1c,
	0x18, 0x9a, 0xc8, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x5c, 0x78, 0x90, 0x89, 0xdc, 0x08, 0x00,
	0x00,
}
