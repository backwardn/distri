syntax = "proto2";

package pb;

message BuildStep {
  repeated string argv = 1;
}

message CBuilder {
  repeated string extra_configure_flag = 1;

  repeated string extra_ldflag = 3;

  // Packages which don’t support separate builddirs need to use this
  // kludge. Bugs should be reported with the respective upstream authors.
  optional bool copy_to_builddir = 2;

  repeated string extra_make_flag = 4;

  optional bool autoreconf = 5;
}

message CMakeBuilder {
  repeated string extra_cmake_flag = 1;
}

message MesonBuilder {
  repeated string extra_meson_flag = 1;
}

message PerlBuilder {
  // Extra flags to be specified when running Makefile.PL, e.g.
  // EXPATLIBPATH=/ro/expat-2.2.6/buildoutput/lib
  repeated string extra_makefile_flag = 1;
}

message PythonBuilder {
}

message GomodBuilder {
}

message GoBuilder {
  // Additional flags to pass to “go install”, e.g. “./...” or “cmd/distri”.
  optional string install = 1;

  // Import path of the package that is being built,
  // e.g. “github.com/junegunn/fzf”.
  //
  // Derived from the source URL by default; should usually not be specified.
  optional string import_path = 2;
}

message Install {
  repeated string systemd_unit = 1;

  message Symlink {
    optional string oldname = 1;
    optional string newname = 2;
  }
  repeated Symlink symlink = 2;

  repeated string empty_dir = 3;

  message Chmod {
    optional bool setuid = 1;
    optional string name = 2;
  }
  repeated Chmod chmod = 4;

  message Cap {
    optional string filename = 1; // relative to ${DISTRI_PREFIX}
    optional string capability = 2; // specified in cap_from_text(3)
  }
  repeated Cap capability = 5;

  message File {
    optional string srcpath = 1; // relative to ${DISTRI_SOURCEDIR}
    optional string destpath = 2; // relative to ${DISTRI_PREFIX}
  }
  repeated File file = 6;

  message Rename {
    optional string oldname = 1; // relative to ${DISTRI_PREFIX}/out
    optional string newname = 2; // relative to ${DISTRI_PREFIX}/out
  }
  repeated Rename rename = 7;

  repeated string delete = 8; // relative to ${DISTRI_PREFIX}/out
}

message Claim {
  optional string glob = 1; // required
  optional string dir = 2;
}

message SplitPackage {
  optional string name = 1; // required

  repeated string runtime_dep = 2;

  repeated Claim claim = 3; // required
}

message Union {
  // e.g. “out/lib/irssi/modules”
  optional string dir = 1; // required
  // e.g. “irssi”
  optional string pkg = 2; // required
}

message Build {
  // URL to upstream source archive. Currently, only tar.gz archives are supported.
  optional string source = 1;
  // Hash (TODO: describe length, introduce prefixes?) of the upstream source archive.
  optional string hash = 2;
  // Version number, to be concatenated to the package name.
  optional string version = 3;

  oneof builder {
    CBuilder cbuilder = 7;
    CMakeBuilder cmakebuilder = 14;
    MesonBuilder mesonbuilder = 16;
    PerlBuilder perlbuilder = 10;
    PythonBuilder pythonbuilder = 12;
    GomodBuilder gomodbuilder = 13;
    GoBuilder gobuilder = 18;
  }

  // TODO: move this field into a custom builder
  repeated BuildStep build_step = 4;

  // TODO: rename to build_dep
  repeated string dep = 5;
  repeated string runtime_dep = 9;

  // URLs to patches to cherry-pick after extracting the source, e.g.:
  // https://git.savannah.gnu.org/cgit/make.git/patch/?id=48c8a116a914a325a0497721f5d8b58d5bba34d4
  repeated string cherry_pick = 6;

  // Copied as-is into the source directory. Could also be achieved by using
  // patches, but files are a little bit easier to maintain this way.
  repeated string extra_file = 17;

  optional Install install = 8;

  repeated SplitPackage split_package = 11;

  // TODO: document unions
  repeated Union runtime_union = 15;
}
